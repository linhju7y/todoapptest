{"version":3,"sources":["utils/storeApi.js","components/List/Title.js","components/Card.js","components/Input/InputCard.js","components/Input/InputContainer.js","components/List/List.js","utils/store.js","components/TopBar.js","App.js","serviceWorker.js","index.js"],"names":["React","createContext","useStyle","makeStyles","theme","editableTitleContainer","margin","spacing","display","background","textAlign","color","borderRadius","editableTitle","flexGrow","fontSize","fontWeight","input","icon","Title","title","listId","onHandleDelete","useState","open","setOpen","newTitle","setNewTitle","updateListTitle","useContext","storeApi","classes","handleOnBlur","InputBase","onChange","e","target","value","autoFocus","inputProps","className","fullWidth","onBlur","onKeyPress","key","Typography","onClick","IconButton","card","padding","Card","index","markCompleted","removeTodo","completed","setCompleted","del","setDel","onHandleChecked","draggableId","id","provided","ref","innerRef","dragHandleProps","draggableProps","Paper","Checkbox","checked","buttonIcon","width","paddingBottom","btnConfirm","fade","confirm","InputCard","type","addMoreCard","addMoreList","setTitle","handleBtnConfirm","multiline","placeholder","Button","root","marginTop","addCard","backgroundColor","InputContainer","Collapse","in","elevation","minWidth","marginLeft","cardContainer","List","list","delList","setDelList","CssBaseline","p","droppableId","droppableProps","cards","map","data","lists","isCompleted","listIds","alignItems","TopBar","minHeight","overflowY","listContainer","App","store","setData","Provider","console","log","newCard","uuid","newState","newListId","newList","updateCard","style","backgroundImage","backgroundSize","backgroundRepeat","onDragEnd","result","destination","source","newListIds","splice","sourceList","destinationList","draggingCard","filter","newSate","direction","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.18db65a4.chunk.js","sourcesContent":["import React from 'react';\r\nexport default React.createContext(null);\r\n","import React, { useState, useContext } from \"react\";\r\nimport {\r\n  Typography,\r\n  InputBase,\r\n  colors,\r\n  withWidth,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport storeApi from \"../../utils/storeApi\";\r\nimport HighlightOffSharpIcon from \"@material-ui/icons/HighlightOffSharp\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  editableTitleContainer: {\r\n    margin: theme.spacing(1),\r\n    display: \"flex\",\r\n    background: \"#0e3867\",\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    borderRadius: \"1.5%\",\r\n  },\r\n  editableTitle: {\r\n    flexGrow: 1,\r\n    fontSize: \"1.6rem\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  input: {\r\n    fontSize: \"1.2rem\",\r\n    fontWeight: \"bold\",\r\n    margin: theme.spacing(1),\r\n    \"&:focus\": {\r\n      background: \"#ddd\",\r\n    },\r\n  },\r\n  icon: {\r\n    color: \"white\",\r\n  },\r\n}));\r\nexport default function Title({ title, listId, onHandleDelete }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [newTitle, setNewTitle] = useState(title);\r\n  const { updateListTitle } = useContext(storeApi);\r\n  const classes = useStyle();\r\n  const handleOnChange = (e) => {\r\n    setNewTitle(e.target.value);\r\n  };\r\n\r\n  const handleOnBlur = () => {\r\n    updateListTitle(newTitle, listId);\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <div>\r\n      {open ? (\r\n        <div>\r\n          <InputBase\r\n            onChange={handleOnChange}\r\n            autoFocus\r\n            value={newTitle}\r\n            inputProps={{\r\n              className: classes.input,\r\n            }}\r\n            fullWidth\r\n            onBlur={handleOnBlur}\r\n            onKeyPress={(e) => {\r\n              if (e.key === \"Enter\") {\r\n                handleOnBlur();\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div className={classes.editableTitleContainer}>\r\n          <Typography\r\n            onClick={() => setOpen(!open)}\r\n            className={classes.editableTitle}\r\n          >\r\n            {title}\r\n          </Typography>\r\n          <IconButton onClick={onHandleDelete}>\r\n            {\" \"}\r\n            <HighlightOffSharpIcon className={classes.icon} />\r\n          </IconButton>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Checkbox, Paper, IconButton } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport storeApi from \"./../utils/storeApi\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  card: {\r\n    padding: theme.spacing(1, 1, 1, 2),\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\nexport default function Card({ card, index }) {\r\n  const classes = useStyle();\r\n  const { markCompleted, removeTodo } = useContext(storeApi);\r\n  const [completed, setCompleted] = useState(false);\r\n  const [del, setDel] = useState(false);\r\n  const onHandleChecked = () => {\r\n    setCompleted(!completed);\r\n  };\r\n\r\n  const onHandleDelete = () => {\r\n    setDel(true);\r\n  };\r\n  return (\r\n    <Draggable draggableId={card.id} index={index}>\r\n      {(provided) => (\r\n        <div\r\n          ref={provided.innerRef}\r\n          {...provided.dragHandleProps}\r\n          {...provided.draggableProps}\r\n        >\r\n          {\" \"}\r\n          {del ? (\r\n            <></>\r\n          ) : (\r\n            <Paper className={classes.card}>\r\n              <Checkbox\r\n                onChange={onHandleChecked}\r\n                checked={completed}\r\n              ></Checkbox>\r\n              {completed ? <strike>{card.title}</strike> : <>{card.title}</>}\r\n\r\n              <IconButton\r\n                className={classes.buttonIcon}\r\n                onClick={onHandleDelete}\r\n              >\r\n                {\" \"}\r\n                <ClearIcon />\r\n              </IconButton>\r\n            </Paper>\r\n          )}\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Paper, InputBase, Button, IconButton } from \"@material-ui/core\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport { makeStyles, fade } from \"@material-ui/core/styles\";\r\nimport storeApi from \"../../utils/storeApi\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  card: {\r\n    width: \"280px\",\r\n    margin: theme.spacing(0, 1, 1, 1),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  input: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  btnConfirm: {\r\n    background: \"#5AAC44\",\r\n    color: \"#fff\",\r\n    \"&:hover\": {\r\n      background: fade(\"#5AAC44\", 0.75),\r\n    },\r\n  },\r\n  confirm: {\r\n    margin: theme.spacing(0, 1, 1, 1),\r\n  },\r\n}));\r\nexport default function InputCard({ setOpen, listId, type }) {\r\n  const classes = useStyle();\r\n  const { addMoreCard, addMoreList } = useContext(storeApi);\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  const handleOnChange = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n  const handleBtnConfirm = () => {\r\n    if (type === \"card\") {\r\n      addMoreCard(title, listId);\r\n      setTitle(\"\");\r\n      setOpen(false);\r\n    } else {\r\n      addMoreList(title);\r\n      setTitle(\"\");\r\n      setOpen(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Paper className={classes.card}>\r\n          <InputBase\r\n            onChange={handleOnChange}\r\n            multiline\r\n            onBlur={() => setOpen(false)}\r\n            fullWidth\r\n            inputProps={{\r\n              className: classes.input,\r\n            }}\r\n            value={title}\r\n            placeholder={\r\n              type === \"card\"\r\n                ? \"Enter a title of this card..\"\r\n                : \"Enter list title...\"\r\n            }\r\n          />\r\n        </Paper>\r\n      </div>\r\n      <div className={classes.confirm}>\r\n        <Button\r\n          className={classes.btnConfirm}\r\n          onClick={handleBtnConfirm}\r\n          onKeyPress={(e) => {\r\n            if (e.key === \"Enter\") {\r\n              handleBtnConfirm();\r\n            }\r\n          }}\r\n        >\r\n          {type === \"card\" ? \"Add Card\" : \"Add List\"}\r\n        </Button>\r\n        <IconButton onClick={() => setOpen(false)}>\r\n          <ClearIcon />\r\n        </IconButton>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Paper, Typography, Collapse } from '@material-ui/core';\r\nimport { makeStyles, fade } from '@material-ui/core/styles';\r\nimport InputCard from './InputCard';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    width: '300px',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  addCard: {\r\n    padding: theme.spacing(1, 1, 1, 2),\r\n    margin: theme.spacing(0, 1, 1, 1),\r\n    background: '#EBECF0',\r\n    '&:hover': {\r\n      backgroundColor: fade('#000', 0.25),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function InputContainer({ listId, type }) {\r\n  const classes = useStyle();\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <div className={classes.root}>\r\n      <Collapse in={open}>\r\n        <InputCard setOpen={setOpen} listId={listId} type={type} />\r\n      </Collapse>\r\n      <Collapse in={!open}>\r\n        <Paper\r\n          className={classes.addCard}\r\n          elevation={0}\r\n          onClick={() => setOpen(!open)}\r\n        >\r\n          <Typography>\r\n            {type === 'card' ? '+ Add a Card' : '+ Add a To Do List'}\r\n          </Typography>\r\n        </Paper>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Paper,\r\n  Typography,\r\n  CssBaseline,\r\n  Checkbox,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Title from \"./Title\";\r\nimport Card from \"../Card\";\r\nimport InputContainer from \"../Input/InputContainer\";\r\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    minWidth: \"300px\",\r\n    backgroundColor: \"#EBECF0\",\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  cardContainer: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  title: {\r\n    display: \"flex\",\r\n  },\r\n}));\r\nexport default function List({ list, index }) {\r\n  const classes = useStyle();\r\n  const [delList, setDelList] = useState(false);\r\n  const onHandleDelete = () => {\r\n    setDelList(true);\r\n  };\r\n\r\n  return (\r\n    <Draggable draggableId={list.id} index={index}>\r\n      {(provided) => (\r\n        <div {...provided.draggableProps} ref={provided.innerRef}>\r\n          {delList ? (\r\n            <></>\r\n          ) : (\r\n            <Paper className={classes.root} {...provided.dragHandleProps}>\r\n              <CssBaseline />\r\n\r\n              <Title\r\n                className={classes.p}\r\n                title={list.title}\r\n                listId={list.id}\r\n                onHandleDelete={onHandleDelete}\r\n              />\r\n\r\n              <Droppable droppableId={list.id}>\r\n                {(provided) => (\r\n                  <div\r\n                    ref={provided.innerRef}\r\n                    {...provided.droppableProps}\r\n                    className={classes.cardContainer}\r\n                  >\r\n                    {list.cards.map((card, index) => (\r\n                      <Card key={card.id} card={card} index={index} />\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </Droppable>\r\n\r\n              <InputContainer listId={list.id} type=\"card\" />\r\n            </Paper>\r\n          )}\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n}\r\n","const cards = [\r\n  {\r\n    id: \"card-1\",\r\n    title: \"Interstellar\",\r\n    isCompleted: true,\r\n  },\r\n  {\r\n    id: \"card-2\",\r\n    title: \"The martian\",\r\n    isCompleted: false,\r\n  },\r\n  {\r\n    id: \"card-3\",\r\n    title: \"WW2\",\r\n    isCompleted: false,\r\n  },\r\n];\r\n\r\nconst data = {\r\n  lists: {\r\n    \"list-1\": {\r\n      id: \"list-1\",\r\n      title: \"Movies to watch\",\r\n      cards,\r\n    },\r\n    \"list-2\": {\r\n      id: \"list-2\",\r\n      title: \"Zombie Furniture\",\r\n      cards: [],\r\n    },\r\n  },\r\n  listIds: [\"list-1\", \"list-2\"],\r\n};\r\n\r\nexport default data;\r\n","import React from \"react\";\r\nimport { Typography, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    margin: theme.spacing(2),\r\n    \r\n  },\r\n  title: {\r\n    fontSize: \"2.5rem\",\r\n    fontWeight: \"bold\",\r\n    flexGrow: 1,\r\n    color: '#0e3867',\r\n    \r\n  },\r\n}));\r\n\r\nexport default function TopBar({ setOpen }) {\r\n  const classes = useStyle();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography className={classes.title}>DASHBOARD</Typography>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport List from \"./components/List/List\";\r\nimport store from \"./utils/store\";\r\nimport StoreApi from \"./utils/storeApi\";\r\nimport InputContainer from \"./components/Input/InputContainer\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport TopBar from \"./components/TopBar\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    minHeight: \"100vh\",\r\n    background: \"#E6E6E6\",\r\n    width: \"100%\",\r\n    overflowY: \"auto\",\r\n  },\r\n  listContainer: {\r\n    display: \"flex\",\r\n  },\r\n}));\r\n\r\nexport default function App() {\r\n  const [data, setData] = useState(store);\r\n\r\n  const classes = useStyle();\r\n\r\n  const addMoreCard = (title, listId) => {\r\n    console.log(title, listId);\r\n\r\n    const newCardId = uuid();\r\n    const newCard = {\r\n      id: newCardId,\r\n      title,\r\n    };\r\n\r\n    const list = data.lists[listId];\r\n    list.cards = [...list.cards, newCard];\r\n\r\n    const newState = {\r\n      ...data,\r\n      lists: {\r\n        ...data.lists,\r\n        [listId]: list,\r\n      },\r\n    };\r\n    setData(newState);\r\n  };\r\n\r\n  const addMoreList = (title) => {\r\n    const newListId = uuid();\r\n    const newList = {\r\n      id: newListId,\r\n      title,\r\n      cards: [],\r\n    };\r\n    const newState = {\r\n      listIds: [...data.listIds, newListId],\r\n      lists: {\r\n        ...data.lists,\r\n        [newListId]: newList,\r\n      },\r\n    };\r\n    setData(newState);\r\n  };\r\n  const updateCard = () => {\r\n    \r\n  };\r\n  const updateListTitle = (title, listId) => {\r\n    const list = data.lists[listId];\r\n    list.title = title;\r\n\r\n    const newState = {\r\n      ...data,\r\n      lists: {\r\n        ...data.lists,\r\n        [listId]: list,\r\n      },\r\n    };\r\n    setData(newState);\r\n  };\r\n\r\n  const onDragEnd = (result) => {\r\n    const { destination, source, draggableId, type } = result;\r\n    console.log(\"destination\", destination, \"source\", source, draggableId);\r\n\r\n    if (!destination) {\r\n      return;\r\n    }\r\n    if (type === \"list\") {\r\n      const newListIds = data.listIds;\r\n      newListIds.splice(source.index, 1);\r\n      newListIds.splice(destination.index, 0, draggableId);\r\n      return;\r\n    }\r\n\r\n    const sourceList = data.lists[source.droppableId];\r\n    const destinationList = data.lists[destination.droppableId];\r\n    const draggingCard = sourceList.cards.filter(\r\n      (card) => card.id === draggableId\r\n    )[0];\r\n\r\n    if (source.droppableId === destination.droppableId) {\r\n      sourceList.cards.splice(source.index, 1);\r\n      destinationList.cards.splice(destination.index, 0, draggingCard);\r\n      const newSate = {\r\n        ...data,\r\n        lists: {\r\n          ...data.lists,\r\n          [sourceList.id]: destinationList,\r\n        },\r\n      };\r\n      setData(newSate);\r\n    } else {\r\n      sourceList.cards.splice(source.index, 1);\r\n      destinationList.cards.splice(destination.index, 0, draggingCard);\r\n\r\n      const newState = {\r\n        ...data,\r\n        lists: {\r\n          ...data.lists,\r\n          [sourceList.id]: sourceList,\r\n          [destinationList.id]: destinationList,\r\n        },\r\n      };\r\n      setData(newState);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StoreApi.Provider\r\n      value={{\r\n        addMoreCard,\r\n        addMoreList,\r\n        updateListTitle,\r\n        updateCard,\r\n      }}\r\n    >\r\n      <div\r\n        className={classes.root}\r\n        style={{\r\n          backgroundImage: \"#E6E6E6\",\r\n          backgroundSize: \"cover\",\r\n          backgroundRepeat: \"no-repeat\",\r\n        }}\r\n      >\r\n        <TopBar />\r\n\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n          <Droppable droppableId=\"app\" type=\"list\" direction=\"horizontal\">\r\n            {(provided) => (\r\n              <div\r\n                className={classes.listContainer}\r\n                ref={provided.innerRef}\r\n                {...provided.droppableProps}\r\n              >\r\n                {data.listIds.map((listId, index) => {\r\n                  const list = data.lists[listId];\r\n                  return <List list={list} key={listId} index={index} />;\r\n                })}\r\n                <InputContainer type=\"list\" />\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </DragDropContext>\r\n      </div>\r\n    </StoreApi.Provider>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}